# My .zshrc default settings for all

####################
# Helper functions #
####################

# Returns whether the given command is executable or aliased.
_has() {
  return $( whence $1 >/dev/null )
}

_prepend_to_path() {
  if [ -d $1 -a -z ${path[(r)$1]} ]; then
    path=($1 $path);
  fi
}

_append_to_path() {
  if [ -d $1 -a -z ${path[(r)$1]} ]; then
    path=($1 $path);
  fi
}


###############
# zSh general #
###############
export TERM="screen-256color"    # colors in tmux
export EDITOR="nvim"             # what else?
export TERMINAL="alacritty"      # prefered terminal emulator / used by i3
# export LC_ALL=en_US.UTF-8       # Locale setting
# export TERM="xterm-256color"    # colors in tmux
autoload -U colors && colors    # enable colors

# history
HISTSIZE=10000                  # increase history
SAVEHIST=10000                  # increase saved history
mkdir -p ~/.cache/zsh           # create cache directory if not exists
HISTFILE=~/.cache/zsh/history   # file to save history

# Auto complete
autoload -U compinit
zstyle ':completion:*' menu select
# Auto complete with case insenstivity
zstyle ':completion:*' matcher-list '' 'm:{a-zA-Z}={A-Za-z}' 'r:|[._-]=* r:|=*' 'l:|=* r:|=*'
zmodload zsh/complist
fpath+=~/dotfiles/zsh/zfunc
compinit
_comp_options+=(globdots)		# Include hidden files.
KEYTIMEOUT=1                    # less key time out (10ms)

#########
# Zinit #
#########

### Added by Zinit's installer
if [[ ! -f $HOME/.local/share/zinit/zinit.git/zinit.zsh ]]; then
    print -P "%F{33} %F{220}Installing %F{33}ZDHARMA-CONTINUUM%F{220} Initiative Plugin Manager (%F{33}zdharma-continuum/zinit%F{220})…%f"
    command mkdir -p "$HOME/.local/share/zinit" && command chmod g-rwX "$HOME/.local/share/zinit"
    command git clone https://github.com/zdharma-continuum/zinit "$HOME/.local/share/zinit/zinit.git" && \
        print -P "%F{33} %F{34}Installation successful.%f%b" || \
        print -P "%F{160} The clone has failed.%f%b"
fi

source "$HOME/.local/share/zinit/zinit.git/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit
### End of Zinit's installer chunk

zinit light-mode for \
    zdharma-continuum/zinit-annex-as-monitor \
    zdharma-continuum/zinit-annex-bin-gem-node \
    zdharma-continuum/zinit-annex-patch-dl \
    zdharma-continuum/zinit-annex-rust

# syntax highlighting while you type: green okay / red error
zinit light "zsh-users/zsh-syntax-highlighting"

# The coolest prompt
zinit light "denysdovhan/spaceship-prompt"

# Autojump alternative
zinit light "skywind3000/z.lua"

# Suggestions
zinit load "zsh-users/zsh-autosuggestions"

# insulter when making mistakes
zinit light "hkbakke/bash-insulter"

#######################
# Space-ship Settings #
#######################
SPACESHIP_USER_SHOW=needed
SPACESHIP_CONDA_PREFIX=" "
SPACESHIP_GIT_SUFFIX=""
SPACESHIP_GIT_BRANCH_SUFFIX=" "
SPACESHIP_PROMPT_ADD_NEWLINE=false
SPACESHIP_PROMPT_SEPARATE_LINE=true
# SPACESHIP_CHAR_SYMBOL=❯
# SPACESHIP_CHAR_SUFFIX=" "
SPACESHIP_HG_SHOW=false
SPACESHIP_PACKAGE_SHOW=false
SPACESHIP_NODE_SHOW=false
SPACESHIP_RUBY_SHOW=false
SPACESHIP_ELM_SHOW=false
SPACESHIP_ELIXIR_SHOW=false
SPACESHIP_XCODE_SHOW_LOCAL=false
SPACESHIP_SWIFT_SHOW_LOCAL=false
SPACESHIP_GOLANG_SHOW=false
SPACESHIP_PHP_SHOW=false
SPACESHIP_RUST_SHOW=false
SPACESHIP_JULIA_SHOW=false
SPACESHIP_DOCKER_SHOW=true
SPACESHIP_DOCKER_CONTEXT_SHOW=false
SPACESHIP_AWS_SHOW=false
SPACESHIP_CONDA_SHOW=true
SPACESHIP_VENV_SHOW=false
SPACESHIP_PYENV_SHOW=false
SPACESHIP_DOTNET_SHOW=false
SPACESHIP_EMBER_SHOW=false
SPACESHIP_KUBECONTEXT_SHOW=false
SPACESHIP_TERRAFORM_SHOW=false
SPACESHIP_TERRAFORM_SHOW=false
SPACESHIP_VI_MODE_SHOW=false
SPACESHIP_JOBS_SHOW=false

#######
# fzf #
#######
source $HOME/dotfiles/fzf/key-bindings.zsh
source $HOME/dotfiles/fzf/completion.zsh

# fzf + ag configuration
if _has fzf && _has ag; then
  export FZF_DEFAULT_COMMAND='ag --nocolor -g ""'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_ALT_C_COMMAND="$FZF_DEFAULT_COMMAND"
  export FZF_DEFAULT_OPTS='
  --color fg:242,bg:236,hl:65,fg+:15,bg+:239,hl+:108
  --color info:108,prompt:109,spinner:108,pointer:168,marker:168
  '
fi


#####################
# aliases & secrets #
#####################
source $HOME/dotfiles/zsh/aliases.zsh
[[ -a $HOME/.secrets.zsh ]] && source $HOME/.secrets.zsh

# [ -z "$SSH_AUTH_SOCK" ] && eval "$(ssh-agent -s)"
